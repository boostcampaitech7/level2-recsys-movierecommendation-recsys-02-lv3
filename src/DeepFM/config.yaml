memo: |-
    DeepFM 모델 데이터 컬럼 수정(유저, 아이템)


# 아래의 일곱 항목들은 argparser로 받은 인자를 우선적으로 사용합니다.
#   $ python main.py --config config.yaml --seed 2024
#   과 같이 실행할 경우 seed는 0이 아닌 2024로 설정됩니다.

checkpoint: 'saved/checkpoints/~.pt'   # 예측 시 불러올 모델 경로
seed: 0               # 시드 고정
predict: False
device: cuda          # 가능한 값 : cpu, cuda, mps
model: DeepFM      # 모델 선택
wandb_project: 'lv2.movie_recommendation'
run_name: 'jinnk0 : DeepFM_20'
early_stopping: 10

model_args:     # model에 해당하는 파라미터만 실질적으로 사용됩니다.
    MultiVAE:
        datatype: data
        p_dims: [200, 600]
    DeepFM:
        embed_dim: 8
        mlp_dims: [16, 8]
        drop_rate: 0.3



dataset:
    data_path: ../data/train/    # 데이터셋 경로
    valid_ratio: 0.2            # Train / Vaildation split

dataloader:
    data_path: ./
    batch_size: 1024    # 배치 사이즈
    shuffle: True       # 학습 데이터 셔플 여부
    num_workers: 0      # 멀티프로세서 수. 0: 메인프로세서만 사용

optimizer:
    type: Adam      # 사용가능한 optimizer: torch.optim.Optimizer 클래스 (https://pytorch.org/docs/stable/optim.html#algorithms)
    args:           # 사용하고자 하는 클래스의 파라미터를 참고하여 추가해주시면 되며, 관계가 없는 파라미터는 무시됩니다.
        lr: 1e-4           # 예) 모든 옵티마이저에서 사용되는 학습률
        weight_decay: 1e-3  # 예) Adam 등 / L2 정규화 가중치
        amsgrad: False      # 예) Adam 등 / amsgrad 사용 여부

other_params:
    args:
        total_anneal_steps: 200000
        anneal_cap: 0.2
        log_interval: 100



lr_scheduler:
    use: False                  # True: 사용 / False: 사용하지 않음 (단, valid_ratio가 0일 경우 validation set이 없어 사용 불가)
    type: ReduceLROnPlateau     # 사용가능한 lr_scheduler: torch.optim.lr_scheduler 클래스 (https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate)
    args:                       # 사용하고자 하는 클래스의 파라미터를 참고하여 추가해주시면 되며, 관계가 없는 파라미터는 무시됩니다.
        mode: 'min'             # 예) ReduceLROnPlateau / 'min' 또는 'max'
        factor: 0.1             # 예) ReduceLROnPlateau / 학습률 감소 비율
        step_size: 10           # 예) StepLR / 학습률 감소 주기 (필수)
        gamma: 0.1              # 예) StepLR 등 / 학습률 감소 비율


# 전체 경로 수정
# 기본
# dir : saved/~

train:
    epochs: 20                         # 학습 에폭 수
    log_dir: saved/log                  # 로그 저장 경로
    ckpt_dir: saved/checkpoint    # 모델 저장 경로
    submit_dir: ../saved/submit            # 예측 저장 경로
    save_best_model: True               # True: val_loss가 최소인 모델 저장 / False: 모든 모델 저장
    resume: False                               # 이어서 학습할 경우 True
    resume_path: saved/checkpoint/~.pt    # 이어서 학습할 모델 경로
    batch_size: 1024
test:
    batch_size: 512
